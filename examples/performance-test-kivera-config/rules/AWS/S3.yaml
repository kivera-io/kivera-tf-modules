---
AWS-S3-CreateBucket-1:
    description: S3-CreateBucket-private
    provider: AWS
    service: S3
    actions:
        - CreateBucket
    policy: valid { input.Headers["X-Amz-Acl"][_] == "private" }
    advanced:
        paths:
            - '*'
        methods:
            - '*'
        endpoints:
            - '*'
    enforce: true
    log-request-body: true
    enable-cfn-scan: false
    tags: {}

AWS-S3-ListObjects-1:
    description: S3-ListObjects-max-items
    provider: AWS
    service: S3
    actions:
        - ListObjects
    policy: valid { to_number(input.Qs["max-keys"]) <= 10 }
    advanced:
        paths:
            - '*'
        methods:
            - '*'
        endpoints:
            - '*'
    enforce: true
    log-request-body: true
    enable-cfn-scan: false
    tags: {}

AWS-S3-MultiAction-1:
    description: Used for perf test - locust nodes read from S3
    provider: AWS
    service: S3
    actions:
        - HeadObject
        - HeadBucket
        - GetObject
    policy: |-
        valid {
            true
        }
    advanced:
        paths:
            - '*'
        methods:
            - '*'
        endpoints:
            - '*'
    enforce: true
    log-request-body: true
    enable-cfn-scan: false
    tags: {}

AWS-S3-PutObject-1:
    description: S3-PutObject-allow-1
    provider: AWS
    service: S3
    actions:
        - PutObject
    policy: valid { input.Path == "/test/key" }
    advanced:
        paths:
            - '*'
        methods:
            - '*'
        endpoints:
            - '*'
    enforce: true
    log-request-body: true
    enable-cfn-scan: false
    tags: {}

AWS-S3-PutObject-2:
    description: S3-PutObject-allow-2
    provider: AWS
    service: S3
    actions:
        - PutObject
    policy: valid { startswith(input.Host, "test-bucket.") }
    advanced:
        paths:
            - '*'
        methods:
            - '*'
        endpoints:
            - '*'
    enforce: true
    log-request-body: true
    enable-cfn-scan: false
    tags: {}

AWS-S3-PutObject-3:
    description: S3-PutObject-KMS-key
    provider: AWS
    service: S3
    actions:
        - PutObject
    policy: valid { input.Headers["X-Amz-Server-Side-Encryption-Aws-Kms-Key-Id"][_] == "arn:aws:kms:ap-southeast-2:326190351503:alias/secure-key" }
    advanced:
        paths:
            - '*'
        methods:
            - '*'
        endpoints:
            - '*'
    enforce: true
    log-request-body: true
    enable-cfn-scan: false
    tags: {}

