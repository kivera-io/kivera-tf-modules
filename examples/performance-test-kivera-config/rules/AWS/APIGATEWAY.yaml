---
AWS-APIGATEWAY-CreateApi-1:
    description: Only allow http
    provider: AWS
    service: APIGATEWAY
    actions:
        - CreateApi
    policy: |-
        valid {
          input.Body.protocolType == "HTTP"
        }
    advanced:
        paths:
            - '*'
        methods:
            - '*'
        endpoints:
            - '*'
    enforce: true
    log-request-body: true
    enable-cfn-scan: false
    tags: {}
    compliance-mappings: {}

AWS-APIGATEWAY-CreateRoute-1:
    description: Must have auth
    provider: AWS
    service: APIGATEWAY
    actions:
        - CreateRoute
    policy: |-
        valid {
          input.Body.authorizationType
          input.Body.authorizationType != "NONE"
        }
    advanced:
        paths:
            - '*'
        methods:
            - '*'
        endpoints:
            - '*'
    enforce: true
    log-request-body: true
    enable-cfn-scan: false
    tags: {}
    compliance-mappings: {}

AWS-APIGATEWAY-GetApis-1:
    description: Allow GetApis
    provider: AWS
    service: APIGATEWAY
    actions:
        - GetApis
    policy: |-
        valid {
          true
        }
    advanced:
        paths:
            - '*'
        methods:
            - '*'
        endpoints:
            - '*'
    enforce: true
    log-request-body: true
    enable-cfn-scan: false
    tags: {}
    compliance-mappings: {}

AWS-APIGATEWAY-GetApis-2:
    description: kivara.cache.get allow
    provider: AWS
    service: APIGATEWAY
    actions:
        - GetVpcLinks
    policy: |-
        valid = true
        # valid {
        #     value = kivera.cache.get("kiveradata:perftest:apigateway");
        #     value == ""
        # }
    advanced:
        paths:
            - '*'
        methods:
            - '*'
        endpoints:
            - '*'
    enforce: true
    log-request-body: true
    enable-cfn-scan: false
    tags: {}
    compliance-mappings: {}

